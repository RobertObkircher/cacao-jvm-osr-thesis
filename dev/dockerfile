# see:
#   https://github.com/tobixdev/cacao-jvm-dev-setup
#   https://github.com/dinfuehr/cacao-docker/
FROM ubuntu:18.04

RUN apt-get update && apt-get -y install \
        git \
        wget \
        unzip \
        libtool \
        autoconf \
        pkgconf \
        automake \
        build-essential \
        gettext \
        binutils-dev \
        libiberty-dev \
        fastjar \
        zlib1g-dev \
        software-properties-common \
        graphviz \
        locales \
        ccache \
        vim \
        ttf-ubuntu-font-family

# gcc 9
RUN add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get update \
    && apt-get -y install gcc-9 g++-9 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9 \
    && update-alternatives --config gcc

# zulu7-jdk
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
ARG ZULU_REPO_VER=1.0.0-2
RUN locale-gen en_US.UTF-8 \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9 \
    && wget https://cdn.azul.com/zulu/bin/zulu-repo_${ZULU_REPO_VER}_all.deb \
    && apt-get -y install ./zulu-repo_${ZULU_REPO_VER}_all.deb \
    && apt-get update \
    && apt-get -y install zulu7-jdk zulu7-src
ENV JAVA_HOME=/usr/lib/jvm/zulu7-ca-amd64

WORKDIR /usr/share/java

RUN wget -O junit4.jar https://repo1.maven.org/maven2/junit/junit/4.12/junit-4.12.jar
RUN wget -O hamcrest.jar https://repo1.maven.org/maven2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar
RUN wget http://ufpr.dl.sourceforge.net/project/jasmin/jasmin/jasmin-2.4/jasmin-2.4.zip \
    && unzip jasmin-2.4.zip jasmin-2.4/jasmin.jar \
    && mv jasmin-2.4/jasmin.jar jasmin-sable.jar \
    && rm -rf jasmin-2.4 jasmin-2.4.zip

WORKDIR /dependencies

RUN wget -O - https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz | tar -xz
ENV CPATH=/dependencies/boost_1_61_0/

RUN wget -O - ftp://ftp.gnu.org/gnu/classpath/classpath-0.99.tar.gz | tar -xz
RUN cd classpath-0.99 \
    && sh autogen.sh \
    && ./configure --disable-plugin --disable-gtk-peer --disable-gconf-peer --disable-gjdoc CFLAGS="-Wno-error=stringop-truncation" \
    && make install

RUN git clone https://github.com/openjdk/jdk7.git
WORKDIR /opt

# Install the CLion IDE:
ENV CLION_VERSION="2024.2.2"
RUN wget -O - "https://download.jetbrains.com/cpp/CLion-${CLION_VERSION}.tar.gz" | tar -xz

CMD "/opt/clion-${CLION_VERSION}/bin/clion"

WORKDIR /root

ENV PATH="/usr/lib/ccache:$PATH" 
